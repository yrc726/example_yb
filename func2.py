input


len(input_)

index=0
lst=[]
while index!=len(input_)-1:
    j=int(index/70)
    i=int(index)%70
#     print('i=',i,'j=',j)
#     print(str(i)+"_"+str(j))
    cell=str(i)+"_"+str(j)
#     print(cell)
    lst.append(cell)
    if input_[index]=='4':
        large_point_cell=cell
        large_point=index
    index=index+1
def dis(s,g):
    s_i=int(s)%70
    s_j=int(int(s)/70)
    g_i=int(g)%70
    g_j=int(int(g)/70)
    i=abs(g_i-s_i)
    j=abs(g_j-s_j)
    if i==0:
        return j*10
    if j==0:
        return i*10
    else:
        if i<j:
            l=i*14+(j-i)*10
        else:
            l=j*14+(i-j)*10
        return l

pt=[500]
mv=[0]
def point(p):
    mv[0]+=1
    if mv[0]==2:
        pt[0]-=1
        mv[0]=0
    pt[0]=pt[0]+p
    print("point:",pt[0])
#     return pt
# point(15)

def update(x,g):
    if len(Open)==0:
        for c in Close:
            result.append(c[0])
        x=Close[len(Close)-1][4]#g#g
        g=4900
        print("**update: x=",x,"g=",g)
        Close.clear()
        Open.clear()
        Close.append([x,0,0,0,-1])
        
        return x
    else:
        min_=Open[0][3]
        i=1
        k=0
        while i!=len(Open):
            if Open[i][3]<min_: #최소값 update시켜주고 Close에 append
                min_=Open[i][3]
                k=i #index 저장해두기
            i+=1
        Close.append(Open[k])
        #     Open.remove(Open[k])
        Open.clear()
        x=Close[len(Close)-1][0]
        return x

def isin(x):
    for c in Close:
        if c[0]==x:
            return 'T'
    return 'F'


#index로------------------index=x
x=0
Close=[]
Open=[]
result=[]
Close.append([x,0,0,0,-1])
g=large_point
def move(x,g):
    if x-70>0:
        if ((input_[x-70]=='0') or (input_[x-70]=='4')) and (isin(x-70)=='F'):#(Close[len(Close)-1][4]!=x-70):
            point(0)
            Open.append([x-70,10+Close[len(Close)-1][1],dis(x-70,g),dis(x-70,g)+10+Close[len(Close)-1][1],x])
        elif (input_[x-70]=='2') and (Close[len(Close)-1][4]!=x-70):
            point(15)
            Open.append([x-70,10+Close[len(Close)-1][1],dis(x-70,g)-15,dis(x-70,g)-15+10+Close[len(Close)-1][1],x])
    if (x-1>0) and ((x-1)%70!=69):
        if ((input_[x-1]=='0') or (input_[x-1]=='4')) and (isin(x-1)=='F'):#(Close[len(Close)-1][4]!=x-1):
            point(0)
            Open.append([x-1,10+Close[len(Close)-1][1],dis(x-1,g),dis(x-1,g)+10+Close[len(Close)-1][1],x])
        elif (input_[x-1]=='2') and (Close[len(Close)-1][4]!=x-1):
            point(15)
            Open.append([x-1,10+Close[len(Close)-1][1],dis(x-1,g)-15,dis(x-1,g)-15+10+Close[len(Close)-1][1],x])
    if (x+1>0) and ((x+1)%70!=0) and ((x+1)<len(input_)): 
        if ((input_[x+1]=='0') or (input_[x+1]=='4')) and (isin(x+1)=='F'):#(Close[len(Close)-1][4]!=x+1):
            point(0)
            Open.append([x+1,10+Close[len(Close)-1][1],dis(x+1,g),dis(x+1,g)+10+Close[len(Close)-1][1],x])
        elif (input_[x+1]=='2') and (Close[len(Close)-1][4]!=x+1):
            point(15)
            Open.append([x+1,10+Close[len(Close)-1][1],dis(x+1,g)-15,dis(x+1,g)-15+10+Close[len(Close)-1][1],x])
    if (x+70>0) and ((x+70)<len(input_)):
        if ((input_[x+70]=='0') or (input_[x+70]=='4')) and (isin(x+70)=='F'):#(Close[len(Close)-1][4]!=x+70):
            point(0)
            Open.append([x+70,10+Close[len(Close)-1][1],dis(x+70,g),dis(x+70,g)+10+Close[len(Close)-1][1],x])
        elif (input_[x+70]=='2') and (Close[len(Close)-1][4]!=x+70):
            point(15)
            Open.append([x+70,10+Close[len(Close)-1][1],dis(x+70,g)-15,dis(x+70,g)-15+10+Close[len(Close)-1][1],x])
    
    print("Open: ",Open)
    print("Close: ",Close)
    print("x:",x)
    #Open과 Close를 update시켜줌
    x=update(x,g) #x도 update
    print('updated x:',x,"\n")
    if x==4900:
        for c in Close:
            result.append(c[0])
        return result
    try:
        move(x,g)
    except:
        print("-----------------------------")

move(0,4830)
